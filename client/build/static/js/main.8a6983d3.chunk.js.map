{"version":3,"sources":["homepage/homepage.js","validationError.js","config.js","services/token-service.js","services/auth-api-service.js","login-form/login-form.js","register-form/register-form.js","search-form/search-form.js","comment-form/comment-form.js","sighting-form/sighting-form.js","resto-list/resto-list.js","resto-item/resto-item.js","header/header.js","landing-page/landing-page.js","display-restoresults/display-restoresults.js","App.js","index.js"],"names":["Homepage","props","react_default","a","createElement","className","type","react_router_dom","to","ValidationError","hasError","message","Fragment","config","API_ENDPOINT","API_KEY","process","REACT_APP_API_KEY","TOKEN_KEY","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","concat","AuthApiService","postLogin","credentials","fetch","method","headers","content-type","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postUser","user","LoginForm","state","error","name","nameValid","passwordValid","formValid","validationMessages","handleSubmitJwtAuth","ev","preventDefault","_this","setState","_ev$target","target","user_name","value","authToken","onLoginSuccess","catch","_this2","this","validateName","_this3","validatePassword","fieldValue","fieldErrors","Object","objectSpread","trim","length","_this4","onSubmit","htmlFor","id","onChange","updateName","updatePassword","disabled","Component","defaultProps","RegistrationForm","event","_this$state","repeatPassword","onRegistrationSuccess","handleSubmit","updateRepeatPassword","passwordMatch","SearchForm","city","date","restaurants","restaurant","query","join","url","options","Content-Type","Error","data","err","cityChanged","selected","dateChanged","CommentForm","comment","Authorization","handleAddComment","search_form","commentAdded","SightingForm","nameOfHw","comments","_ref","handleAddResto","placeholder","nameChanged","nameOfHwChanged","commentChanged","RestoList","map","i","assign","key","React","RestoItem","nameofhw","Header","handleLogoutClick","onClick","renderLogoutLink","renderLoginLink","Landingpage","header_Header","DisplayRestoResults","resto_list","App","toConsumableArray","react_router","exact","path","component","LandingPage","HomePage","render","routerProps","comment_form","addComment","sighting_form","addRestaurant","ReactDOM","src_App","name of housewife","Beverly Hills","document","getElementById"],"mappings":"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","file":"static/js/main.8a6983d3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default function Homepage(props){\n    return(<div className=\"homepage\">\n    <button type=\"submit\"><Link to='/comment'>Comment</Link></button>\n    <button type=\"submit\"><Link to='/sighting'>Sighting</Link></button>\n    <button type=\"submit\"><Link to='/search'>Search</Link></button>\n\n    </div>)\n};","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","export default {\n    API_ENDPOINT: `http://localhost:8000/api/restaurants`,\n    API_KEY: process.env.REACT_APP_API_KEY,\n    TOKEN_KEY: 'blogful-client-auth-token',\n}\n\n\n    \n\n  ","import config from '../config'\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n}\n\nexport default TokenService\n","import config from '../config'\n\nconst AuthApiService = {\n  postLogin(credentials) {\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postUser(user) {\n         return fetch(`${config.API_ENDPOINT}/users`, {\n           method: 'POST',\n           headers: {\n             'content-type': 'application/json',\n           },\n           body: JSON.stringify(user),\n         })\n           .then(res =>\n             (!res.ok)\n               ? res.json().then(e => Promise.reject(e))\n               : res.json()\n           )\n       },\n}\n\nexport default AuthApiService","import React,{Component} from 'react';\nimport ValidationError from '../validationError';\nimport { Link } from 'react-router-dom';\nimport TokenService from '../services/token-service';\nimport AuthApiService from '../services/auth-api-service'\n\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  }\n    state = {\n      error: 'null',\n         name: '',\n         password: '',\n         nameValid: false,\n         passwordValid: false,\n         formValid: false,\n         validationMessages: {\n           name: '',\n           password: '',\n         }\n       }\n     \n   \n     updateName(name) {\n       this.setState({name}, () => {this.validateName(name)});\n     }\n     \n    updatePassword(password) {\n       this.setState({password}, () => {this.validatePassword(password)});\n     }\n   \n     \n   \n   \n      \n      \n handleSubmitJwtAuth = ev => {\n     ev.preventDefault()\n     this.setState({ error: null })\n     const { user_name, password } = ev.target\n  \n     AuthApiService.postLogin({\n       user_name: user_name.value,\n       password: password.value,\n     })\n       .then(res => {\n         user_name.value = ''\n         password.value = ''\n         TokenService.saveAuthToken(res.authToken)\n         this.props.onLoginSuccess()\n       })\n       .catch(res => {\n         this.setState({ error: res.error })\n       })\n   }\n     \n   \n     validateName(fieldValue) {\n       const fieldErrors = {...this.state.validationMessages};\n       let hasError = false;\n   \n       fieldValue = fieldValue.trim();\n       if(fieldValue.length === 0) {\n         fieldErrors.name = 'Name is required';\n         hasError = true;\n       } \n         \n     else {\n           fieldErrors.name = '';\n           hasError = false;\n         }\n       \n   \n       this.setState({\n         validationMessages: fieldErrors,\n         nameValid: !hasError\n       }, this.formValid );\n   \n    }\n   \n     validatePassword(fieldValue) {\n       const fieldErrors = {...this.state.validationMessages};\n       let hasError = false;\n   \n       fieldValue = fieldValue.trim();\n       if(fieldValue.length === 0) {\n         fieldErrors.password = 'Password is required';\n         hasError = true;\n       }  else {\n             fieldErrors.password = '';\n             hasError = false;\n           }\n         \n       \n   \n       this.setState({\n         validationMessages: fieldErrors,\n         passwordValid: !hasError\n       }, this.formValid );\n   \n      }\n   \n     \n   \n     formValid() {\n       this.setState({\n         formValid: this.state.nameValid && this.state.passwordValid\n       });\n     }\n   \n     render () {\n       return (\n        <form className=\"login\" onSubmit={e => this.this.handleSubmitJwtAuth(e)}>\n          <h2>Login</h2>\n        \n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name *</label>\n            <input type=\"text\" className=\"registration__control\"\n              name=\"name\" id=\"name\" onChange={e => this.updateName(e.target.value)}/>\n            <ValidationError hasError={!this.state.nameValid} message={this.state.validationMessages.name}/>  \n          </div>\n          <div className=\"form-group\">\n             <label htmlFor=\"password\">Password *</label>\n             <input type=\"password\" className=\"registration__control\"\n              name=\"password\" id=\"password\" onChange={e => this.updatePassword(e.target.value)}/>\n             <div className=\"registration__hint\">6 to 72 characters, must include a number</div>\n             <ValidationError hasError={!this.state.passwordValid} message={this.state.validationMessages.password}/>\n          </div>\n        \n   \n          <div className=\"Login__button__group\">\n           <button type=\"reset\" className=\"Login__button\">\n               Cancel\n           </button>\n           <button type=\"submit\" className=\"Login__button\" disabled={!this.state.formValid}><Link to='/homepage'>\n               Save\n          </Link> </button>\n          </div>\n        </form>\n      )\n    }\n   }\n   export default LoginForm;","import React, { Component } from 'react';\nimport ValidationError from '../validationError';\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../services/auth-api-service'\n\nclass RegistrationForm extends Component {\n\n//  state = {\n//    error:null,\n//       user_name: '',\n//       password: '',\n//       repeatPassword: '',\n//       nameValid: false,\n//       passwordValid: false,\n//       passwordMatch: false,\n//       formValid: false,\n//       validationMessages: {\n//         user_name: '',\n//         password: '',\n//         repeatPassword: ''\n//       }\n//     }\n  \n\n//   updateName(user_name) {\n//     this.setState({user_name}, () => {this.validateName(user_name)});\n//   }\n\n//   updatePassword(password) {\n//     this.setState({password}, () => {this.validatePassword(password)});\n//   }\n\n//   updateRepeatPassword(repeatPassword) {\n//     this.setState({repeatPassword}, () => {this.matchPasswords(repeatPassword)});\n//   }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { user_name, password, repeatPassword } = this.state;\n    AuthApiService.postUser({\n           user_name: user_name.value,\n           password: password.value,\n           \n         })\n           .then(user => {\n                \n                user_name.value = ''\n                password.value = ''\n                this.props.onRegistrationSuccess()\n           })\n           .catch(res => {\n             this.setState({ error: res.error })\n           })\n  }\n   \n  \n\n  // validateName(fieldValue) {\n  //   const fieldErrors = {...this.state.validationMessages};\n  //   let hasError = false;\n\n  //   fieldValue = fieldValue.trim();\n  //   if(fieldValue.length === 0) {\n  //     fieldErrors.name = 'Name is required';\n  //     hasError = true;\n  //   } else {\n  //     if (fieldValue.length < 3) {\n  //       fieldErrors.name = 'Name must be at least 3 characters long';\n  //       hasError = true;\n  //     } else {\n  //       fieldErrors.name = '';\n  //       hasError = false;\n  //     }\n  //   }\n\n  //   this.setState({\n  //     validationMessages: fieldErrors,\n  //     nameValid: !hasError\n  //   }, this.formValid );\n\n  // }\n\n  // validatePassword(fieldValue) {\n  //   const fieldErrors = {...this.state.validationMessages};\n  //   let hasError = false;\n\n  //   fieldValue = fieldValue.trim();\n  //   if(fieldValue.length === 0) {\n  //     fieldErrors.password = 'Password is required';\n  //     hasError = true;\n  //   } else {\n  //     if (fieldValue.length < 6 || fieldValue.length > 72) {\n  //       fieldErrors.password = 'Password must be between 6 and 72 characters long';\n  //       hasError = true;\n  //     } else {\n  //       if(!fieldValue.match(new RegExp(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/))) {\n  //         fieldErrors.password = 'Password must contain at least one number and one letter';\n  //         hasError = true;\n  //       } else {\n  //         fieldErrors.password = '';\n  //         hasError = false;\n  //       }\n  //     }\n  //   }\n\n  //   this.setState({\n  //     validationMessages: fieldErrors,\n  //     passwordValid: !hasError\n  //   }, this.formValid );\n\n  // }\n\n  // matchPasswords(fieldValue) {\n  //   const fieldErrors = {...this.state.validationMessages};\n  //   let hasError = false;\n\n  //   const password = this.state.password;\n\n  //   if(fieldValue !== password) {\n  //     fieldErrors.repeatPassword = 'Passwords do not match';\n  //     hasError = true;\n  //   } else {\n  //     fieldErrors.repeatPassword = '';\n  //     hasError = false;\n  //   }\n\n  //   this.setState({\n  //     validationMessages: fieldErrors,\n  //     passwordMatch: !hasError\n  //   }, this.formValid );\n\n  // }\n\n  // formValid() {\n  //   this.setState({\n  //     formValid: this.state.nameValid && this.state.passwordValid && this.state.passwordMatch\n  //   });\n  // }\n\n  render () {\n    return (\n     <form className=\"registration\" onSubmit={e => this.handleSubmit(e)}>\n       <h2>Register</h2>\n       <div className=\"registration__hint\">* required field</div>  \n       <div className=\"form-group\">\n         <label htmlFor=\"user_name\">Name *</label>\n         <input type=\"text\" className=\"registration__control\"\n           name=\"user_name\" id=\"user_name\" onChange={e => this.updateName(e.target.value)}/>\n         {/* <ValidationError hasError={!this.state.nameValid} message={this.state.validationMessages.name}/>   */}\n       </div>\n       <div className=\"form-group\">\n          <label htmlFor=\"password\">Password *</label>\n          <input type=\"password\" className=\"registration__control\"\n           name=\"password\" id=\"password\" onChange={e => this.updatePassword(e.target.value)}/>\n          <div className=\"registration__hint\">6 to 72 characters, must include a number</div>\n          {/* <ValidationError hasError={!this.state.passwordValid} message={this.state.validationMessages.password}/> */}\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"repeatPassword\">Repeat Password *</label>\n         <input type=\"password\" className=\"registration__control\"\n           name=\"repeatPassword\" id=\"repeatPassword\" onChange={e => this.updateRepeatPassword(e.target.value)}/>\n           <ValidationError hasError={!this.state.passwordMatch} message={this.state.validationMessages.repeatPassword}/>\n       </div>\n\n       <div className=\"registration__button__group\">\n        <button type=\"reset\" className=\"registration__button\">\n            Cancel\n        </button>\n        <button type=\"submit\" className=\"registration__button\" disabled={!this.state.formValid}><Link to='/homepage'>\n            Save\n      </Link></button>\n       </div>\n     </form>\n   )\n }\n}\nexport default RegistrationForm;","import React, { Component } from  'react';\nimport config from '../config';\nimport { Link } from 'react-router-dom'\n\n\nclass SearchForm extends Component {\n    state = {\n        city:\"\",\n        date:\"\",\n        restaurants:[],\n        restaurant:[]\n      };\n\n      cityChanged(city) {\n        this.setState({\n          city\n        });\n      }\n      \n      dateChanged(date) {\n        this.setState({\n          date\n        });\n      }\n          \n  handleSubmit(e) {\n    e.preventDefault();\n    // const API_KEY='config.API_KEY;'\n    const baseUrl = 'config.API_ENDPOINT';\n    const params = [\n      `q=${this.state.city}`,\n      `filter=${this.state.date}`,\n      // `key=${API_KEY}`\n     ];\n  \n    const query = params.join(\"&\");\n    const url = `${baseUrl}?${query}`;\n  \n    const options= {\n      method: 'GET',\n      body: JSON.stringify(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"Authorization\": `Bearer ${config.API_KEY}`\n      }}\n  \n    fetch(url,options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong, please try again later.\");\n        }\n        return res;\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          restaurants: data,\n          error: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });  \n  }\n    \n  render() {\n    return (\n      <>\n    \n         <div className=\"searchForm\">\n          <form className=\"searchForm\" onSubmit={e => this.handleSubmit(e)}>\n            <label htmlFor=\"sortByCity\">Choose The City: </label>\n            <select\n              id=\"city\"\n              name=\"city\"\n              onChange={e => this.props.cityChanged(e.target.value)}\n            >\n               <option value=\"New Jersey\">New Jersey</option>\n                <option value=\"New York\">New York</option>\n                <option value=\"Patomac\">Patomac</option>\n                 <option value=\"Orange County\">Orange County</option>\n                 <option value=\"Dallas\">Dallas</option>\n                  <option value=\"Atlanta\">Atlanta</option>\n                <option value=\"Beverly Hills\" selected>Beverly Hills</option>\n            </select>\n\n            <label htmlFor=\"sortByDate\">Sort By Date: </label>\n            <select\n              id=\"date\"\n              name=\"date\"\n              onChange={e => this.props.dateChanged(e.target.value)}\n            >\n               <option value=\"Most Recent\">Most Recent</option>\n                <option value=\"Least Recent\">Least Recent</option>\n            </select>\n            <button type=\"reset\">Cancel</button>\n            <button type=\"submit\"><Link to='/displayresults'>\n               Submit\n          </Link></button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from  'react';\nimport SearchForm from '../search-form/search-form';\nimport config from '../config'\n\n\n\nclass CommentForm extends Component {\n  state = {\n       comment: \"\",\n     };\n  \n commentAdded(comment) {\n    this.setState({\n     comment\n    });\n  }\n\n  \n\n   handleSubmit(e) {\n    e.preventDefault();\n    const {comment} = this.state;\n    const url ='config.API_ENDPOINT';\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(comment),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${config.API_KEY}`\n      }\n    };\n\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.setState({\n          comment: \"\"\n        });\n        this.props.handleAddComment(comment);\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  render() {\n    const error = this.state.error\n          ? <div className=\"error\">{this.state.error}</div>\n          : \"\";\n\n    return (\n      <div className=\"addComment\">\n      <SearchForm/>\n        <h2>Add Comment</h2>\n        { error }\n        <form className=\"addComment__form\" onSubmit={e => this.handleSubmit(e)}>\n\n          <label htmlFor=\"comment\">Comment: </label>\n          <input\n            type=\"number\"\n            name=\"comment\"\n            id=\"comment\"\n            value={this.state.comment}\n            onChange={e => this.commentAdded(e.target.value)}/>\n\n          <div className=\"addComment__buttons\">\n            <button type=\"reset\">Cancel</button>\n            <button type=\"submit\" >Save</button>\n          </div>  \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CommentForm;","import React, { Component } from  'react';\nimport config from '../config'\n\n\nclass SightingForm extends Component {\n  state = {\n      name: \"\",\n      city:\"\",\n      nameOfHw:\"\",\n      comments: \"\",\n     \n    };\n  \n\n  nameChanged(name) {\n    this.setState({\n      name\n    });\n  }\n\n  cityChanged(city){\n    this.setState({\n      city\n    });\n  }\n\n  commentChanged(comment) {\n    this.setState({\n     comment\n    });\n  }\n\n  nameOfHwChanged(nameOfHw) {\n    this.setState({\n      nameOfHw\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const restaurant = (({name, city, comment, nameOfHw}) => ({name, city, comment, nameOfHw}))(this.state);\n    const url ='config.API_ENDPOINT';\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(restaurant),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${config.API_KEY}`\n      }\n    };\n\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.setState({\n          name: \"\",\n          city: \"\",\n          comment: \"\",\n          nameOfHw: \"\"\n        });\n        this.props.handleAddResto(restaurant);\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n   \n\n  render() {\n    const error = this.state.error\n          ? <div className=\"error\">{this.state.error}</div>\n          : \"\";\n\n    return (\n      <div className=\"addSighting\">\n        <h2>Add Sighting</h2>\n        { error }\n        <form className=\"addSighting__form\" onSubmit={e => this.handleSubmit(e)}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"name\"\n            value={this.state.name}\n            onChange={e => this.nameChanged(e.target.value)}/>\n             <label htmlFor=\"city\"> City: </label>\n            <select\n              id=\"city\"\n              name=\"city\"\n              onChange={e => this.props.cityChanged(e.target.value)}\n            >\n               <option value=\"New Jersey\">New Jersey</option>\n                <option value=\"New York\">New York</option>\n                <option value=\"Patomac\">Patomac</option>\n                 <option value=\"Orange County\">Orange County</option>\n                 <option value=\"Dallas\">Dallas</option>\n                  <option value=\"Atlanta\">Atlanta</option>\n                <option value=\"Beverly Hills\" selected>Beverly Hills</option>\n            </select>\n          \n          <label htmlFor=\"nameOfHw\">Name of Housewife:</label>  \n          <textarea\n            name=\"nameOfHw\"\n            id=\"nameOfHw\"\n            placeholder=\"nameOfHw\"\n            value={this.state.nameOfHw}\n            onChange={e => this.nameOfHwChanged(e.target.value)}/>\n          <label htmlFor=\"comment\">Comment: </label>\n          <input\n            type=\"text\"\n            name=\"comment\"\n            id=\"comment\"\n            value={this.state.comment}\n            onChange={e => this.commentChanged(e.target.value)}/>\n\n          <div className=\"addSighting__buttons\">\n            <button type=\"reset\">Cancel</button>\n            <button type=\"submit\" >Save</button>\n          </div>  \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SightingForm;","import React from \"react\";\n\nclass RestoList extends React.Component {\n  render() {\n    const restaurants = this.props.restaurants.map((restaurant, i) => <restaurant {...restaurant} key={i} />);\n\n    return <div className=\"restaurantList\">{restaurants}</div>;\n  }\n}\n\nexport default RestoList;\n","import React from \"react\";\n\nclass RestoItem extends React.Component {\n  render() {\n    \n    const comments = comments.map((comment, i) => <span key={i}>{comment}</span>);\n  \n\n    return (\n      <div className=\"Restaurant\">\n        <h2>{this.props.name}</h2>\n       \n        <div className=\"resto__details\">\n\n            <div>City: {this.props.city}</div>\n            <div>Name of Housewife: {this.props.nameofhw} </div>\n            <div>Comments: {this.props.comments}</div>\n          </div>\n       \n      </div>\n    );\n  }\n}\nexport default RestoItem;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport TokenService from '../services/token-service'\n\n\nexport default class Header extends Component {\n  handleLogoutClick = () => {\n    TokenService.clearAuthToken()\n  }\n\n  renderLogoutLink() {\n    return (\n      <div className='Header__logged-in'>\n        <Link\n          onClick={this.handleLogoutClick}\n          to='/'>\n          Logout\n        </Link>\n      </div>\n    )\n  }\n\n  renderLoginLink() {\n    return (\n      <div className='Header__not-logged-in'>\n        <Link\n          to='/register'>\n          Register\n        </Link>\n        \n        <Link\n          to='/login'>\n          Log in\n        </Link>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <nav className='Header'>\n        {/* <h1>\n          <Link to='/'>\n        \n            {' '}\n           Home\n          </Link>\n        </h1> */}\n        {TokenService.hasAuthToken()\n          ? this.renderLogoutLink()\n          : this.renderLoginLink()}\n      </nav>\n    )\n  }\n}\n","import React from 'react';\nimport Header from '../header/header'\n\nexport default function Landingpage(props){\n    return(<div className=\"landingpage\"><Header/></div>)}\n\n\n ","import React from 'react';\nimport RestoList from '../resto-list/resto-list'\n\n\nexport default function DisplayRestoResults(props){\n    return(<div className=\"results\">\n    <RestoList restaurants={this.props.restaurants}/>\n    </div>)\n};","import React, { Component } from 'react';\nimport HomePage from './homepage/homepage';\nimport LoginForm from './login-form/login-form'\nimport RegistrationForm from './register-form/register-form';\nimport SearchForm from './search-form/search-form';\nimport CommentForm from './comment-form/comment-form';\nimport SightingForm from './sighting-form/sighting-form';\nimport RestoList from './resto-list/resto-list';\nimport RestoItem from './resto-item/resto-item';\nimport LandingPage from './landing-page/landing-page'\nimport {  Route   } from 'react-router-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport config from './config'\nimport DisplayRestoResults from './display-restoresults/display-restoresults'\n\nclass App extends Component {\n  state = {\n    date: \"\",\n    city: \"\",\n    restaurants:[],\n    restaurant:[],\n    comments:[]\n};\n\n  \n\naddRestaurant(restaurant) {\n  this.setState({\n    restaurants: [...this.state.restaurants, restaurant],\n  });\n}\n\naddComment(comment) {\n  this.setState({\n    comments: [...this.state.comments, comment],\n  });\n}\n\n\nrender() {\n  return (\n   <div>\n  \n    <Router>\n    <div className=\"App\">\n     <main>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/homepage\" component={HomePage} />\n        <Route exact path=\"/restolist\" component={RestoList} />\n        <Route exact path=\"/restoitem/:restoId\" component={RestoItem} />\n        <Route exact path=\"/login\"  component={LoginForm}/>\n        <Route exact path=\"/register\" component={RegistrationForm}/>\n           \n\n        <Route exact path=\"/comment\" \n        render={( routerProps ) => {\n              return <CommentForm\n              handleAddComment={comment => this.addComment(comment)}\n              />  }} />\n        \n        <Route exact path=\"/sighting\" \n        render={( routerProps ) => {\n             return <SightingForm\n             handleAddResto={restaurant => this.addRestaurant(restaurant)}\n            /> }} />\n\n         <Route exact path=\"/search\" \n              render={( routerProps ) => {\n              return <SearchForm\n               onSubmit={this.handleSubmit}\n               />\n           }} />\n<Route exact path=\"/displayresults\" render={( routerProps ) => {\n              return <DisplayRestoResults/>\n           }} />\n        </main>\n      </div>\n    </Router>\n    </div>\n  );\n}\n}\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst RESTAURANTS = [\n  {\"name\":\"Scarpetta\",\"city\":\"New York\",\"comment\":[\"loved it\", \"saw Bethany!\"],\"name of housewife\":\"Bethany\"},\n  {\"name\":\"Old Lady Gang\",\"city\":\"Atlanta\",\"comment\":[\"great food!\"],\"name of housewife\":\"Porscha\"},\n  {\"name\":\"Sur\",\"city\":\"0.9KB\",\"Beverly Hills\":[\"Tom and Tom were there\"],\"name of housewife\":\"Lisa\"},\n  {\"name\":\"The Brownstone\",\"city\":\"New Jersey\",\"comment\":[\"Had the steak\", 'Albie was there'],\"name of housewife\":\"Melissa\"},\n];\n\nReactDOM.render(<BrowserRouter>\n    <App restaurants={RESTAURANTS}/>\n  </BrowserRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}